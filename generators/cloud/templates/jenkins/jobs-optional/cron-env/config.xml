<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Manage cron for the <%= environment %> environment.</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.13.1">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H 9 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>/opt/development/<%= projectName %>/jenkins/env/workspace/deploy-<%= environment %></customWorkspace>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/usr/bin/env bash
export DOCKER_ENV=<%= environment %>
export COMPOSE_PROJECT_NAME=<%= machineName %>_${DOCKER_ENV:--local}
export COMPOSE_FILE=build.<%= dockerComposeExt %>yml

# Handler for errors or other interruptions.
cancel() {
  echo &quot;$JOB_NAME: Error: Line $1: $2&quot;
  exit 35
}

# Abort build step on errors.
trap &apos;cancel $LINENO $BASH_COMMAND&apos; ERR SIGINT SIGTERM SIGQUIT SIGHUP

docker-compose run --rm drush cron -v</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <disableFailedJob.disableFailedJob.DisableFailedJob plugin="disable-failed-job@1.15">
      <whenDisable>Only Failure</whenDisable>
      <failureTimes>2</failureTimes>
      <optionalBrockChecked>true</optionalBrockChecked>
    </disableFailedJob.disableFailedJob.DisableFailedJob>
    <% if (flowdockApiKey) { %><com.flowdock.jenkins.FlowdockNotifier plugin="jenkins-flowdock-plugin@1.1.8">
      <flowToken><%= flowdockApiKey %></flowToken>
      <notificationTags>cron, <%= environment %></notificationTags>
      <chatNotification>false</chatNotification>
      <notifyMap>
        <entry>
          <com.flowdock.jenkins.BuildResult>FIXED</com.flowdock.jenkins.BuildResult>
          <boolean>true</boolean>
        </entry>
        <entry>
          <com.flowdock.jenkins.BuildResult>UNSTABLE</com.flowdock.jenkins.BuildResult>
          <boolean>false</boolean>
        </entry>
        <entry>
          <com.flowdock.jenkins.BuildResult>NOT_BUILT</com.flowdock.jenkins.BuildResult>
          <boolean>false</boolean>
        </entry>
        <entry>
          <com.flowdock.jenkins.BuildResult>SUCCESS</com.flowdock.jenkins.BuildResult>
          <boolean>true</boolean>
        </entry>
        <entry>
          <com.flowdock.jenkins.BuildResult>ABORTED</com.flowdock.jenkins.BuildResult>
          <boolean>false</boolean>
        </entry>
        <entry>
          <com.flowdock.jenkins.BuildResult>FAILURE</com.flowdock.jenkins.BuildResult>
          <boolean>true</boolean>
        </entry>
      </notifyMap>
      <notifySuccess>true</notifySuccess>
      <notifyFailure>true</notifyFailure>
      <notifyFixed>true</notifyFixed>
      <notifyUnstable>false</notifyUnstable>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
    </com.flowdock.jenkins.FlowdockNotifier><% } -%>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.3">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>
